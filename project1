{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ab35da27-39d5-49f3-a817-fbdcc643cce6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0;18393;2;168;62.0;110;80;1;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1;20228;1;156;85.0;140;90;3;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2;18857;1;165;64.0;130;70;3;1;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3;17623;2;169;82.0;150;100;1;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4;17474;1;156;56.0;100;60;1;1;0;0;0;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993;19240;2;168;76.0;120;80;1;1;1;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995;22601;1;158;126.0;140;90;2;2;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996;19066;2;183;105.0;180;90;3;1;0;1;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998;22431;1;163;72.0;135;80;1;2;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999;20540;1;170;72.0;120;80;2;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio\n",
       "0                  0;18393;2;168;62.0;110;80;1;1;0;0;1;0                               \n",
       "1                  1;20228;1;156;85.0;140;90;3;1;0;0;1;1                               \n",
       "2                  2;18857;1;165;64.0;130;70;3;1;0;0;0;1                               \n",
       "3                 3;17623;2;169;82.0;150;100;1;1;0;0;1;1                               \n",
       "4                  4;17474;1;156;56.0;100;60;1;1;0;0;0;0                               \n",
       "...                                                  ...                               \n",
       "69995          99993;19240;2;168;76.0;120;80;1;1;1;0;1;0                               \n",
       "69996         99995;22601;1;158;126.0;140;90;2;2;0;0;1;1                               \n",
       "69997         99996;19066;2;183;105.0;180;90;3;1;0;1;0;1                               \n",
       "69998          99998;22431;1;163;72.0;135;80;1;2;0;0;0;1                               \n",
       "69999          99999;20540;1;170;72.0;120;80;2;1;0;0;1;0                               \n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df= pd.read_csv(r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "57cab0a7-a2ee-4c26-b419-2b4b64097b2e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2= pd.read_csv(r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\", sep=';')\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1f6af5a9-b78a-4880-baca-9f3002952a52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.describe of           id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.describe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6e763f3e-3cdb-431a-a932-869afc4a3b99",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 70000 entries, 0 to 69999\n",
      "Data columns (total 13 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   id           70000 non-null  int64  \n",
      " 1   age          70000 non-null  int64  \n",
      " 2   gender       70000 non-null  int64  \n",
      " 3   height       70000 non-null  int64  \n",
      " 4   weight       70000 non-null  float64\n",
      " 5   ap_hi        70000 non-null  int64  \n",
      " 6   ap_lo        70000 non-null  int64  \n",
      " 7   cholesterol  70000 non-null  int64  \n",
      " 8   gluc         70000 non-null  int64  \n",
      " 9   smoke        70000 non-null  int64  \n",
      " 10  alco         70000 non-null  int64  \n",
      " 11  active       70000 non-null  int64  \n",
      " 12  cardio       70000 non-null  int64  \n",
      "dtypes: float64(1), int64(12)\n",
      "memory usage: 6.9 MB\n"
     ]
    }
   ],
   "source": [
    "df2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "922316f7-2a74-4294-ac6c-71ba59792aa2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0   0  18393       2     168    62.0    110     80            1     1      0   \n",
       "1   1  20228       1     156    85.0    140     90            3     1      0   \n",
       "2   2  18857       1     165    64.0    130     70            3     1      0   \n",
       "3   3  17623       2     169    82.0    150    100            1     1      0   \n",
       "4   4  17474       1     156    56.0    100     60            1     1      0   \n",
       "\n",
       "   alco  active  cardio  \n",
       "0     0       1       0  \n",
       "1     0       1       1  \n",
       "2     0       0       1  \n",
       "3     0       1       1  \n",
       "4     0       0       0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "de44ae5d-6ee5-408d-86e0-8b81d5aa044a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'age', 'gender', 'height', 'weight', 'ap_hi', 'ap_lo',\n",
       "       'cholesterol', 'gluc', 'smoke', 'alco', 'active', 'cardio'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6d8084f6-b823-4c07-8550-ed7d58d94d2d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_234736\\885300383.py:3: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='gender', data=df2, palette='Set2')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='gender', ylabel='count'>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "sns.countplot(x='gender', data=df2, palette='Set2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2af82419-e919-4670-a9b8-6a215c6d5913",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='age', ylabel='Count'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(df2[\"age\"], bins=30, kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "be315d7d-c909-4ed6-858f-d373aa9ac899",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_234736\\3707386451.py:1: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='cardio', data=df2, palette='coolwarm')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='cardio', ylabel='count'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='cardio', data=df2, palette='coolwarm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "41cd8484-d4a2-49ad-8b7b-5ed1c3b4f6cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_234736\\3707386451.py:1: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='cardio', data=df2, palette='coolwarm')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='cardio', ylabel='count'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='cardio', data=df2, palette='coolwarm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9d0a18c5-2e5f-4cda-909c-f7f044e07c37",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_234736\\3707386451.py:1: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='cardio', data=df2, palette='coolwarm')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='cardio', ylabel='count'>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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BghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABghNAAAABiIamrZt26bbbrtNiYmJSkxMVF5enl5++WVn3rZtbdy4UV6vV3FxcZozZ47efPPNsDVCoZDWrFmjlJQUxcfHq7CwUGfOnAmr8fv98vl8sixLlmXJ5/Opo6MjrOb06dNavHix4uPjlZKSopKSEnV3dw/auQMAgKEloqFp/Pjx+s53vqPXX39dr7/+uubOnat7773XCUZPPfWUnn32WW3dulVHjhyRx+PRXXfdpYsXLzprlJaWqqqqSpWVlaqvr1dnZ6cKCgrU29vr1BQVFampqUnV1dWqrq5WU1OTfD6fM9/b26t77rlHXV1dqq+vV2Vlpfbs2aOysrJP7s0AAABRzWXbth3pJj4sOTlZmzdv1le/+lV5vV6VlpZq/fr1kv6yq5SWlqYnn3xSDzzwgAKBgMaNG6ddu3Zp2bJlkqT33ntPGRkZ2rdvnxYsWKBjx44pKytLDQ0Nys3NlSQ1NDQoLy9Px48fV2Zmpl5++WUVFBSopaVFXq9XklRZWakVK1aovb1diYmJV+01FAopFAo5x8FgUBkZGQoEAtd8zo3ad6RzUNYFhrq7Z4yJdAs37PwrlZFuAYhKY+fdP6jrB4NBWZb1sb+/o+aept7eXlVWVqqrq0t5eXk6deqU2tralJ+f79S43W7dcccdOnDggCSpsbFRPT09YTVer1fZ2dlOzcGDB2VZlhOYJGnmzJmyLCusJjs72wlMkrRgwQKFQiE1NjZes+eKigrnkp9lWcrIyBiYNwMAAESdiIemo0ePasyYMXK73XrwwQdVVVWlrKwstbW1SZLS0tLC6tPS0py5trY2xcbGKikp6SNrUlNT+7xuampqWM2Vr5OUlKTY2Fin5mo2bNigQCDgPFpaWq7z7AEAwFAxMtINZGZmqqmpSR0dHdqzZ4+WL1+uuro6Z97lcoXV27bdZ+xKV9Zcrb4/NVdyu91yu90f2QsAABgeIr7TFBsbq1tvvVXTp09XRUWFpk2bpu9+97vy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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='cardio', data=df2, palette='coolwarm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b1f43a77-c8b1-4a1c-a329-a22eba12b38a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   id       age    gender    height    weight     ap_hi  \\\n",
      "id           1.000000  0.003457  0.003502 -0.003038 -0.001830  0.003356   \n",
      "age          0.003457  1.000000 -0.022811 -0.081515  0.053684  0.020764   \n",
      "gender       0.003502 -0.022811  1.000000  0.499033  0.155406  0.006005   \n",
      "height      -0.003038 -0.081515  0.499033  1.000000  0.290968  0.005488   \n",
      "weight      -0.001830  0.053684  0.155406  0.290968  1.000000  0.030702   \n",
      "ap_hi        0.003356  0.020764  0.006005  0.005488  0.030702  1.000000   \n",
      "ap_lo       -0.002529  0.017647  0.015254  0.006150  0.043710  0.016086   \n",
      "cholesterol  0.006106  0.154424 -0.035821 -0.050226  0.141768  0.023778   \n",
      "gluc         0.002467  0.098703 -0.020491 -0.018595  0.106857  0.011841   \n",
      "smoke       -0.003699 -0.047633  0.338135  0.187989  0.067780 -0.000922   \n",
      "alco         0.001210 -0.029723  0.170966  0.094419  0.067113  0.001408   \n",
      "active       0.003755 -0.009927  0.005866 -0.006570 -0.016867 -0.000033   \n",
      "cardio       0.003799  0.238159  0.008109 -0.010821  0.181660  0.054475   \n",
      "\n",
      "                ap_lo  cholesterol      gluc     smoke      alco    active  \\\n",
      "id          -0.002529     0.006106  0.002467 -0.003699  0.001210  0.003755   \n",
      "age          0.017647     0.154424  0.098703 -0.047633 -0.029723 -0.009927   \n",
      "gender       0.015254    -0.035821 -0.020491  0.338135  0.170966  0.005866   \n",
      "height       0.006150    -0.050226 -0.018595  0.187989  0.094419 -0.006570   \n",
      "weight       0.043710     0.141768  0.106857  0.067780  0.067113 -0.016867   \n",
      "ap_hi        0.016086     0.023778  0.011841 -0.000922  0.001408 -0.000033   \n",
      "ap_lo        1.000000     0.024019  0.010806  0.005186  0.010601  0.004780   \n",
      "cholesterol  0.024019     1.000000  0.451578  0.010354  0.035760  0.009911   \n",
      "gluc         0.010806     0.451578  1.000000 -0.004756  0.011246 -0.006770   \n",
      "smoke        0.005186     0.010354 -0.004756  1.000000  0.340094  0.025858   \n",
      "alco         0.010601     0.035760  0.011246  0.340094  1.000000  0.025476   \n",
      "active       0.004780     0.009911 -0.006770  0.025858  0.025476  1.000000   \n",
      "cardio       0.065719     0.221147  0.089307 -0.015486 -0.007330 -0.035653   \n",
      "\n",
      "               cardio  \n",
      "id           0.003799  \n",
      "age          0.238159  \n",
      "gender       0.008109  \n",
      "height      -0.010821  \n",
      "weight       0.181660  \n",
      "ap_hi        0.054475  \n",
      "ap_lo        0.065719  \n",
      "cholesterol  0.221147  \n",
      "gluc         0.089307  \n",
      "smoke       -0.015486  \n",
      "alco        -0.007330  \n",
      "active      -0.035653  \n",
      "cardio       1.000000  \n"
     ]
    }
   ],
   "source": [
    "correlation_matrix = df2.corr()\n",
    "print(correlation_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1a2d3475-2c89-48f9-b963-e6d692913738",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Logistic Regression\n",
    "df2= pd.read_csv(r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\", sep=';')\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dde799e1-187d-4277-84d9-a84a5a123802",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2[\"cardio\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1f764899-745a-4710-81e0-97a769d5a006",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             0\n",
       "age            0\n",
       "gender         0\n",
       "height         0\n",
       "weight         0\n",
       "ap_hi          0\n",
       "ap_lo          0\n",
       "cholesterol    0\n",
       "gluc           0\n",
       "smoke          0\n",
       "alco           0\n",
       "active         0\n",
       "cardio         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d3378458-12bc-4e83-be31-baf55189ae6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0      18393       2     168    62.0    110     80            1     1      0   \n",
       "1      20228       1     156    85.0    140     90            3     1      0   \n",
       "2      18857       1     165    64.0    130     70            3     1      0   \n",
       "3      17623       2     169    82.0    150    100            1     1      0   \n",
       "4      17474       1     156    56.0    100     60            1     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "69995  19240       2     168    76.0    120     80            1     1      1   \n",
       "69996  22601       1     158   126.0    140     90            2     2      0   \n",
       "69997  19066       2     183   105.0    180     90            3     1      0   \n",
       "69998  22431       1     163    72.0    135     80            1     2      0   \n",
       "69999  20540       1     170    72.0    120     80            2     1      0   \n",
       "\n",
       "       alco  active  \n",
       "0         0       1  \n",
       "1         0       1  \n",
       "2         0       0  \n",
       "3         0       1  \n",
       "4         0       0  \n",
       "...     ...     ...  \n",
       "69995     0       1  \n",
       "69996     0       1  \n",
       "69997     1       0  \n",
       "69998     0       0  \n",
       "69999     0       1  \n",
       "\n",
       "[70000 rows x 11 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#input\n",
    "x=df2.iloc[:,1:12]\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "8ba246a9-006a-41db-a227-1c137b42a48e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cardio\n",
       "0           0\n",
       "1           1\n",
       "2           1\n",
       "3           1\n",
       "4           0\n",
       "...       ...\n",
       "69995       0\n",
       "69996       1\n",
       "69997       1\n",
       "69998       1\n",
       "69999       0\n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#output\n",
    "y=df2.iloc[:,12:]\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2ce73f74-7160-497b-9193-6bd55899eb7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:1408: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n",
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:465: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. OF ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LogisticRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "logi_model = LogisticRegression()\n",
    "\n",
    "logi_model.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "9e090fee-d576-463b-ab90-d78469d72543",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:2739: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([1])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logi_model.predict([[1,2,3,4,5,6,7,8,9,10,11]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5901961d-c958-410a-a8a4-d340ecd393d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "70000 |70000\n"
     ]
    }
   ],
   "source": [
    "print(f\"{len(x)} |{len(y)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b479df05-8561-493a-aebc-ab86313d0eba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "xtrain : 68600 | ytrain : 68600 | xtest : 1400 | ytest : 1400\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "xtrain,xtest,ytrain,ytest=train_test_split(x,y,train_size=0.98)\n",
    "print (f\"xtrain : {len(xtrain)} | ytrain : {len(ytrain)} | xtest : {len(xtest)} | ytest : {len(ytest)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "1ba72816-1e7b-431e-a099-22b2be70729c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12714</th>\n",
       "      <td>23410</td>\n",
       "      <td>1</td>\n",
       "      <td>151</td>\n",
       "      <td>69.0</td>\n",
       "      <td>120</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10862</th>\n",
       "      <td>16331</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>65.0</td>\n",
       "      <td>110</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48741</th>\n",
       "      <td>19058</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>73.0</td>\n",
       "      <td>130</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46724</th>\n",
       "      <td>16164</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>76.0</td>\n",
       "      <td>190</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19734</th>\n",
       "      <td>15409</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>79.0</td>\n",
       "      <td>110</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68952</th>\n",
       "      <td>15914</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>83.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59574</th>\n",
       "      <td>19091</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>70.0</td>\n",
       "      <td>130</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54359</th>\n",
       "      <td>21102</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24345</th>\n",
       "      <td>20493</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>60.0</td>\n",
       "      <td>130</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6970</th>\n",
       "      <td>23370</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>61.0</td>\n",
       "      <td>160</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>68600 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "12714  23410       1     151    69.0    120     70            3     3      0   \n",
       "10862  16331       2     168    65.0    110     70            1     1      0   \n",
       "48741  19058       1     170    73.0    130     80            3     3      0   \n",
       "46724  16164       1     163    76.0    190    100            3     1      0   \n",
       "19734  15409       1     169    79.0    110     90            2     3      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "68952  15914       2     175    83.0    120     80            1     1      0   \n",
       "59574  19091       2     169    70.0    130     90            1     1      0   \n",
       "54359  21102       1     165    72.0    120     80            1     1      0   \n",
       "24345  20493       2     165    60.0    130     80            1     1      0   \n",
       "6970   23370       1     161    61.0    160     80            2     1      0   \n",
       "\n",
       "       alco  active  \n",
       "12714     0       0  \n",
       "10862     0       1  \n",
       "48741     0       1  \n",
       "46724     0       1  \n",
       "19734     0       1  \n",
       "...     ...     ...  \n",
       "68952     0       1  \n",
       "59574     0       1  \n",
       "54359     0       1  \n",
       "24345     0       1  \n",
       "6970      0       1  \n",
       "\n",
       "[68600 rows x 11 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "7af01b0c-cf87-4182-9e48-3dae101bdd4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12714</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10862</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48741</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46724</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19734</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68952</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59574</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54359</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24345</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6970</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>68600 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cardio\n",
       "12714       1\n",
       "10862       0\n",
       "48741       0\n",
       "46724       1\n",
       "19734       1\n",
       "...       ...\n",
       "68952       0\n",
       "59574       1\n",
       "54359       0\n",
       "24345       0\n",
       "6970        1\n",
       "\n",
       "[68600 rows x 1 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ytrain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2db7f7f1-5334-48c3-8354-40c249c6f837",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:1408: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n",
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:465: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. OF ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LogisticRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logi_model2 = LogisticRegression()\n",
    "logi_model2.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "537fcc1f-c94a-403e-8ca5-a951fde44f74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>65136</th>\n",
       "      <td>21136</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>65.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17567</th>\n",
       "      <td>18442</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>56.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46138</th>\n",
       "      <td>20421</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>83.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58077</th>\n",
       "      <td>19481</td>\n",
       "      <td>2</td>\n",
       "      <td>178</td>\n",
       "      <td>82.0</td>\n",
       "      <td>190</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24034</th>\n",
       "      <td>21065</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>58.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47224</th>\n",
       "      <td>21648</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>70.0</td>\n",
       "      <td>170</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32247</th>\n",
       "      <td>17532</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>109.0</td>\n",
       "      <td>140</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20958</th>\n",
       "      <td>18132</td>\n",
       "      <td>1</td>\n",
       "      <td>175</td>\n",
       "      <td>75.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20308</th>\n",
       "      <td>19606</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>84.0</td>\n",
       "      <td>110</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30427</th>\n",
       "      <td>21701</td>\n",
       "      <td>2</td>\n",
       "      <td>182</td>\n",
       "      <td>97.0</td>\n",
       "      <td>130</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1400 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "65136  21136       1     164    65.0    100     60            2     1      0   \n",
       "17567  18442       2     168    56.0    120     80            1     1      0   \n",
       "46138  20421       1     160    83.0    140     90            2     1      0   \n",
       "58077  19481       2     178    82.0    190     90            2     1      1   \n",
       "24034  21065       1     156    58.0    120     80            1     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "47224  21648       1     156    70.0    170     90            3     3      0   \n",
       "32247  17532       1     164   109.0    140     80            1     2      0   \n",
       "20958  18132       1     175    75.0    120     80            1     1      0   \n",
       "20308  19606       2     173    84.0    110     90            3     1      1   \n",
       "30427  21701       2     182    97.0    130     80            3     3      0   \n",
       "\n",
       "       alco  active  \n",
       "65136     0       0  \n",
       "17567     0       1  \n",
       "46138     0       0  \n",
       "58077     1       1  \n",
       "24034     0       0  \n",
       "...     ...     ...  \n",
       "47224     0       0  \n",
       "32247     0       1  \n",
       "20958     0       1  \n",
       "20308     0       1  \n",
       "30427     0       1  \n",
       "\n",
       "[1400 rows x 11 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ca52e315-fd0c-448d-80f8-1da91744d7b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 0 1 ... 0 0 1]\n"
     ]
    }
   ],
   "source": [
    "ans  = logi_model2.predict(xtest)\n",
    "print(ans)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "aa717a31-a46f-4e8a-a433-b14ea21c03b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>65136</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17567</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46138</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58077</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24034</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47224</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32247</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20958</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20308</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30427</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1400 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cardio\n",
       "65136       1\n",
       "17567       0\n",
       "46138       1\n",
       "58077       1\n",
       "24034       0\n",
       "...       ...\n",
       "47224       1\n",
       "32247       1\n",
       "20958       0\n",
       "20308       1\n",
       "30427       1\n",
       "\n",
       "[1400 rows x 1 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ytest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "bbf25fd2-186e-46bc-8699-5623dc689852",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7114285714285714"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logi_model2.score(xtest,ytest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1e03b828-0721-416b-a2e7-708d11616c41",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1400, 1)\n",
      "(1400,)\n"
     ]
    }
   ],
   "source": [
    "print(ytest.shape)\n",
    "print(ans.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3220acdf-0bce-4a2c-b3b9-d0e92c0892bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[518, 182],\n",
       "       [222, 478]])"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "cm= confusion_matrix(ytest,ans)\n",
    "cm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "bcfdfb21-7525-472f-b287-eceec3268a46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(\n",
    "    cm,annot=True,\n",
    "    xticklabels=(\"0\",\"1\"),\n",
    "    yticklabels=(\"0\",\"1\")             \n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "08d9d0af-fa05-4265-adc4-8292a4f0536d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0      18393       2     168    62.0    110     80            1     1      0   \n",
       "1      20228       1     156    85.0    140     90            3     1      0   \n",
       "2      18857       1     165    64.0    130     70            3     1      0   \n",
       "3      17623       2     169    82.0    150    100            1     1      0   \n",
       "4      17474       1     156    56.0    100     60            1     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "69995  19240       2     168    76.0    120     80            1     1      1   \n",
       "69996  22601       1     158   126.0    140     90            2     2      0   \n",
       "69997  19066       2     183   105.0    180     90            3     1      0   \n",
       "69998  22431       1     163    72.0    135     80            1     2      0   \n",
       "69999  20540       1     170    72.0    120     80            2     1      0   \n",
       "\n",
       "       alco  active  \n",
       "0         0       1  \n",
       "1         0       1  \n",
       "2         0       0  \n",
       "3         0       1  \n",
       "4         0       0  \n",
       "...     ...     ...  \n",
       "69995     0       1  \n",
       "69996     0       1  \n",
       "69997     1       0  \n",
       "69998     0       0  \n",
       "69999     0       1  \n",
       "\n",
       "[70000 rows x 11 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Decision Trees\n",
    "x=df2.iloc[:,1:12]\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "84a9a7ef-c407-40a1-b7be-ec95022282c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cardio\n",
       "0           0\n",
       "1           1\n",
       "2           1\n",
       "3           1\n",
       "4           0\n",
       "...       ...\n",
       "69995       0\n",
       "69996       1\n",
       "69997       1\n",
       "69998       1\n",
       "69999       0\n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=df2.iloc[:,12:]\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ac839f84-f2ba-437f-93ed-8b92ccab590c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "xtrain : 68600 | ytrain : 68600 | xtest : 1400 | ytest : 1400\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "xtrain,xtest,ytrain,ytest=train_test_split(x,y,train_size=0.98)\n",
    "print (f\"xtrain : {len(xtrain)} | ytrain : {len(ytrain)} | xtest : {len(xtest)} | ytest : {len(ytest)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "aad4470a-5a2a-490e-8f44-e5e2772ecc15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Make sure Ytrain is 1D\n",
    "ytrain = ytrain.values.ravel()\n",
    "ytest = ytest.values.ravel()\n",
    "\n",
    "# Now fit\n",
    "dtc = DecisionTreeClassifier()\n",
    "dtc.fit(xtrain, ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "5a19843f-5534-41a5-9380-ef8dca4e90a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier\n",
    "dtc=DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a82f8c8b-664d-4d6b-9fbb-ec1743576e6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtc.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "43e87e3b-9b6c-4a4b-ab16-a6828c2d52b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 1 ... 0 1 1]\n"
     ]
    }
   ],
   "source": [
    "ans2  = dtc.predict(xtest)\n",
    "print(ans2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "cb04cfa5-c00f-4281-abce-3853cd862e34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 1, ..., 0, 1, 1])"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ytest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "5e5b6f7a-3cbb-4676-b245-3d24bc5dee86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6292857142857143"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtc.score(xtest,ytest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "3dfcb5b7-f7f4-4d79-8fab-2440344faa1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\base.py:1389: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  return fit_method(estimator, *args, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-6 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-6 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-6 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-6 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-6 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-6 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-6 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-6 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-6 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Random Forest Classifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rfc=RandomForestClassifier()\n",
    "rfc.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "dc06165b-bd69-4438-832c-811f3224b0b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 0 ... 0 1 1]\n"
     ]
    }
   ],
   "source": [
    "ans3  = rfc.predict(xtest)\n",
    "print(ans3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "9d1a93db-44d3-4f21-a57c-c3086ff7c6d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7152142857142857"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc.score(xtest,ytest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "1fb8d844-b1cc-43a7-8868-956bac00ead9",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\neighbors\\_classification.py:239: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  return self._fit(X, y)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-7 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-7 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-7 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-7 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-7 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>KNeighborsClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier()"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "knn=KNeighborsClassifier()\n",
    "knn.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "c9071a65-2c94-40b3-92c8-c5d3ebdda09d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 0 ... 0 1 1]\n"
     ]
    }
   ],
   "source": [
    "ans4  = rfc.predict(xtest)\n",
    "print(ans4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "752b19d3-713c-4808-9eb6-29488caf1f44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6820714285714286"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn.score(xtest,ytest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "99b2d282-d65c-4100-b42c-af77d49ee589",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:1408: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-8 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-8 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-8 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-8 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-8 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-8 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-8 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-8 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-8 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-8 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-8 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-8 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>SVC</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>SVC()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC()"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "svc=SVC()\n",
    "svc.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "b6dbcd53-3e64-443d-a0c2-bda129ade8f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 0 ... 0 1 1]\n"
     ]
    }
   ],
   "source": [
    "ans5  = rfc.predict(xtest)\n",
    "print(ans5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "4d646661-49d0-4818-b4d0-47727ecd20f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6053571428571428"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc.score(xtest,ytest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "9ef14780-6abe-440a-9f67-d1fe64abb137",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'age')"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df2[\"age\"],df2[\"cardio\")\n",
    "plt.xlabel(\"cardio\")\n",
    "plt.ylabel(\"age\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "6651e053-b5ec-44bb-b642-94c83a89601b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "kmeans=KMeans(n_clusters=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "56890069-7801-4062-b5f9-862443c7444c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-9 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-9 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-9 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-9 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-9 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-9 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-9 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-9 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-9 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-9 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-9 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-9 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>KMeans</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=2)"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.fit(df2[[\"age\",\"cardio\"]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "b89d837d-12df-4199-9759-ca401cad89e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "      <th>cluster_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  cluster_group  \n",
       "0          0     0       1       0              0  \n",
       "1          0     0       1       1              1  \n",
       "2          0     0       0       1              0  \n",
       "3          0     0       1       1              0  \n",
       "4          0     0       0       0              0  \n",
       "...      ...   ...     ...     ...            ...  \n",
       "69995      1     0       1       0              1  \n",
       "69996      0     0       1       1              1  \n",
       "69997      0     1       0       1              0  \n",
       "69998      0     0       0       1              1  \n",
       "69999      0     0       1       0              1  \n",
       "\n",
       "[70000 rows x 14 columns]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2[\"cluster_group\"]=kmeans.labels_\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "22c4b52b-8aa5-468b-bc3a-2da136716161",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cluster_group\n",
       "1    38894\n",
       "0    31106\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2[\"cluster_group\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "16e26b74-5483-4a0d-b37c-e050453d6324",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='age', ylabel='cardio'>"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x=\"age\",y=\"cardio\",hue=\"cluster_group\",data=df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "b343a56f-bfd8-4206-976e-05cfdd9fd57e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "      <th>cluster_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>21914</td>\n",
       "      <td>1</td>\n",
       "      <td>151</td>\n",
       "      <td>67.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>9</td>\n",
       "      <td>22113</td>\n",
       "      <td>1</td>\n",
       "      <td>157</td>\n",
       "      <td>93.0</td>\n",
       "      <td>130</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12</td>\n",
       "      <td>22584</td>\n",
       "      <td>2</td>\n",
       "      <td>178</td>\n",
       "      <td>95.0</td>\n",
       "      <td>130</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>14</td>\n",
       "      <td>19834</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>68.0</td>\n",
       "      <td>110</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69994</th>\n",
       "      <td>99992</td>\n",
       "      <td>21074</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>80.0</td>\n",
       "      <td>150</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>38894 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "5          8  21914       1     151    67.0    120     80            2     2   \n",
       "6          9  22113       1     157    93.0    130     80            3     1   \n",
       "7         12  22584       2     178    95.0    130     90            3     3   \n",
       "9         14  19834       1     164    68.0    110     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69994  99992  21074       1     165    80.0    150     80            1     1   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  cluster_group  \n",
       "1          0     0       1       1              1  \n",
       "5          0     0       0       0              1  \n",
       "6          0     0       1       0              1  \n",
       "7          0     0       1       1              1  \n",
       "9          0     0       0       0              1  \n",
       "...      ...   ...     ...     ...            ...  \n",
       "69994      0     0       1       1              1  \n",
       "69995      1     0       1       0              1  \n",
       "69996      0     0       1       1              1  \n",
       "69998      0     0       0       1              1  \n",
       "69999      0     0       1       0              1  \n",
       "\n",
       "[38894 rows x 14 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "most_heart_disease=df2[df2[\"cluster_group\"]==1]\n",
    "most_heart_disease"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0a38b415-53f8-46bb-a2f9-e3439ddebabd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
